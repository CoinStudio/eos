export EOSIO_VERSION_MAJOR=$(cat CMakeLists.txt | grep "set(VERSION_MAJOR" | awk '{print $2}' | sed 's/)//g')
export EOSIO_VERSION_MINOR=$(cat CMakeLists.txt | grep "set(VERSION_MINOR" | awk '{print $2}' | sed 's/)//g')
export EOSIO_VERSION_PATCH=$(cat CMakeLists.txt | grep "set(VERSION_PATCH" | awk '{print $2}' | sed 's/)//g')
export EOSIO_VERSION="${EOSIO_VERSION_MAJOR}.${EOSIO_VERSION_MINOR}.${EOSIO_VERSION_PATCH}"
export INSTALL_LOCATION=${INSTALL_LOCATION:-${HOME}}
export EOSIO_HOME="${INSTALL_LOCATION}/eosio/${EOSIO_VERSION}"

export SRC_LOCATION=${EOSIO_HOME}/src
export OPT_LOCATION=${EOSIO_HOME}/opt
export VAR_LOCATION=${EOSIO_HOME}/var
export ETC_LOCATION=${EOSIO_HOME}/etc
export BIN_LOCATION=${EOSIO_HOME}/bin
export LIB_LOCATION=${EOSIO_HOME}/lib
export DATA_LOCATION=${EOSIO_HOME}/data

# CMAKE
export CMAKE_VERSION_MAJOR=3
export CMAKE_VERSION_MINOR=13
export CMAKE_VERSION_PATCH=2
export CMAKE_VERSION=${CMAKE_VERSION_MAJOR}.${CMAKE_VERSION_MINOR}.${CMAKE_VERSION_PATCH}

# MONGO
export MONGODB_VERSION=3.6.3
export MONGODB_ROOT=${OPT_LOCATION}/mongodb-${MONGODB_VERSION}
export MONGODB_CONF=${ETC_LOCATION}/mongod.conf
export MONGODB_LOG_LOCATION=${VAR_LOCATION}/log/mongodb
export MONGODB_LINK_LOCATION=${OPT_LOCATION}/mongodb
export MONGODB_DATA_LOCATION=${DATA_LOCATION}/mongodb
export MONGO_C_DRIVER_VERSION=1.13.0
export MONGO_C_DRIVER_ROOT=${SRC_LOCATION}/mongo-c-driver-${MONGO_C_DRIVER_VERSION}
export MONGO_CXX_DRIVER_VERSION=3.4.0
export MONGO_CXX_DRIVER_ROOT=${SRC_LOCATION}/mongo-cxx-driver-r${MONGO_CXX_DRIVER_VERSION}

# BOOST
export BOOST_VERSION_MAJOR=1
export BOOST_VERSION_MINOR=67
export BOOST_VERSION_PATCH=0
export BOOST_VERSION=${BOOST_VERSION_MAJOR}_${BOOST_VERSION_MINOR}_${BOOST_VERSION_PATCH}
export BOOST_ROOT=${BOOST_LOCATION:-${SRC_LOCATION}/boost_${BOOST_VERSION}}
export BOOST_LINK_LOCATION=${OPT_LOCATION}/boost

# LLVM
export LLVM_VERSION=release_40
export LLVM_ROOT=${OPT_LOCATION}/llvm
export LLVM_DIR=${LLVM_ROOT}/lib/cmake/llvm

# DOXYGEN
export DOXYGEN_VERSION=1_8_14
export DOXYGEN_ROOT=${SRC_LOCATION}/doxygen-${DOXYGEN_VERSION}

# CLANG
export CLANG_ROOT=${OPT_LOCATION}/clang8
export PINNED_COMPILER_BRANCH=release_80
export PINNED_COMPILER_LLVM_COMMIT=18e41dc
export PINNED_COMPILER_CLANG_COMMIT=a03da8b
export PINNED_COMPILER_LLD_COMMIT=d60a035
export PINNED_COMPILER_POLLY_COMMIT=1bc06e5
export PINNED_COMPILER_CLANG_TOOLS_EXTRA_COMMIT=6b34834
export PINNED_COMPILER_LIBCXX_COMMIT=1853712
export PINNED_COMPILER_LIBCXXABI_COMMIT=d7338a4
export PINNED_COMPILER_LIBUNWIND_COMMIT=57f6739
export PINNED_COMPILER_COMPILER_RT_COMMIT=5bc7979
export BUILD_CLANG=${BUILD_CLANG:-false}
export PIN_COMPILER=${PIN_COMPILER:-false}

export CPU_CORES=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || sysctl -n hw.ncpu)
export CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE:-Release}
export ENABLE_DOXYGEN=${DOXYGEN:-false}
export ENABLE_MONGO=${ENABLE_MONGO:-false}
export ENABLE_COVERAGE_TESTING=${ENABLE_COVERAGE_TESTING:-false}
export CORE_SYMBOL_NAME=${CORE_SYMBOL_NAME:-SYS}
export NONINTERACTIVE=${NONINTERACTIVE:-false}
export PROCEED=${PROCEED:-false}
export HOMEBREW_NO_AUTO_UPDATE=1
export MONGO_ENABLED=${MONGO_ENABLED:-true}
export TINI_VERSION=0.18.0
export DISK_MIN=5
export COUNT=1

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
REPO_ROOT="${SCRIPT_DIR}/.."
BUILD_DIR="${REPO_ROOT}/build"

